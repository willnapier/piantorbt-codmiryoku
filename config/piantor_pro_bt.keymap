/*
 * Copyright (c) 2025 Will Napier
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <behaviors/num_word.dtsi>

// Set maximum mouse velocity
#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200

// Layer definitions
#define BASE 0
#define SYM 1
#define NUM 2
#define NAV 3
#define MEDIA 4
#define MOUSE 5
#define FUN 6

// Miryoku timeless HRM settings
#define QUICK_TAP_MS 175

&mt {
    flavor = "balanced";
    tapping-term-ms = <280>;
    quick-tap-ms = <QUICK_TAP_MS>;
    require-prior-idle-ms = <150>;
    hold-trigger-on-release;
};

/ {
    behaviors {
        td_ctrlz: tap_dance {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&none>, <&kp LC(Z)>;
        };

        // Smart shift with parentheses on shift - urob-inspired simplified version
        smart_shift_left: smart_shift_left_morph {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&sk LSHFT>, <&kp LPAR>;  // Normal = sticky shift, Shift = (
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        smart_shift_right: smart_shift_right_morph {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&sk LSHFT>, <&kp RPAR>;  // Normal = sticky shift, Shift = )
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        // Forward slash / backslash on same key
        slash_morph: slash_behavior {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp FSLH>, <&kp BSLH>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        // Question mark / exclamation on same key
        question_combo: question_combo_morph {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp QUESTION>, <&kp EXCLAMATION>;   // Normal = ? vs Shift = !
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        // Colon / semicolon on same key
        colon_semi: colon_semi_morph {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp COLON>, <&kp SEMI>;   // Normal = : vs Shift = ;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };
};

// Configure acceleration behavior (Urob-style)
&mmv {
    acceleration-exponent = <1>;
    time-to-max-speed-ms = <60>;
    delay-ms = <0>;
};

/ {
    chosen {
        zmk,physical-layout = &default_layout;
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            bindings = <
                &kp PIPE        &kp Q           &kp W           &kp F           &lt MEDIA P     &kp B           &kp J           &kp L           &kp U           &kp Y           &kp SQT         &question_combo
                &smart_shift_left &mt LCTRL A   &mt LALT R      &mt LGUI S      &mt LSHFT T     &kp G           &kp M           &mt RSHFT N     &mt RGUI E      &mt RALT I      &mt RCTRL O     &smart_shift_right
                &none           &kp Z           &mt RALT X      &kp C           &kp D           &kp V           &kp K           &kp H           &kp COMMA       &mt RALT DOT    &slash_morph    &colon_semi
                                                &kp ESC                &lt NAV SPACE   &lt MOUSE TAB   &lt SYM RET     &lt NUM BSPC    &lt FUN ESC
            >;
        };

        sym_layer {
            bindings = <
                &trans          &kp LBRC        &kp AMPS        &kp ASTRK       &kp LPAR        &kp RBRC        &none           &to BASE        &none           &none           &bootloader     &trans
                &trans          &kp SEMI        &kp DLLR        &kp PRCNT       &kp CARET       &kp PLUS        &none           &kp LSHFT       &kp LGUI        &kp LALT        &kp LCTRL       &none
                &trans          &kp TILDE       &kp EXCL        &kp AT          &kp LS(N3)      &kp PIPE        &none           &to SYM         &to MOUSE       &kp RALT        &sys_reset      &trans
                                                &none           &none           &none           &none           &none           &none
            >;
        };

        num_layer {
            bindings = <
                &trans          &kp LBKT        &kp N7          &kp N8          &kp N9          &kp RBKT        &none           &to BASE        &none           &none           &bootloader     &trans
                &trans          &kp GRAVE       &kp N4          &kp N5          &kp N6          &kp EQUAL       &kp N0          &kp LSHFT       &kp LGUI        &kp LALT        &kp LCTRL       &kp MINUS
                &trans          &kp TILDE       &kp N1          &kp N2          &kp N3          &none           &kp STAR        &to NUM         &kp COMMA       &kp DOT         &kp FSLH        &sys_reset
                                                &none           &kp SPACE       &none           &none           &none           &kp DEL
            >;
        };

        nav_layer {
            bindings = <
                &trans          &bootloader     &to BASE        &to BASE        &to BASE        &none           &kp LC(Y)       &kp LC(V)       &kp LC(C)       &kp LC(X)       &td_ctrlz       &kp UNDER
                &trans          &kp LCTRL       &kp LALT        &kp LGUI        &kp LSHFT       &none           &caps_word      &kp LEFT        &kp DOWN        &kp UP          &kp RIGHT       &kp MINUS
                &trans          &sys_reset      &kp RALT        &to NUM         &to NAV         &none           &kp INS         &kp HOME        &kp PG_DN       &kp PG_UP       &kp END         &trans
                                                &none           &none           &none           &kp RET         &kp BSPC        &kp DEL
             >;
        };

        media_layer {
            bindings = <
                &trans          &bootloader     &to BASE        &none           &none           &none           &none           &none           &none           &none           &none           &trans
                &trans          &kp LCTRL       &kp LALT        &kp LGUI        &kp LSHFT       &none           &out OUT_TOG    &kp C_PREV      &kp C_VOL_DN    &kp C_VOL_UP    &kp C_NEXT      &none
                &trans          &sys_reset      &kp RALT        &to FUN         &to MEDIA       &none           &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_CLR      &trans
                                                &none           &none           &none           &kp C_STOP      &kp C_PP        &kp C_MUTE
            >;
        };

        mouse_layer {
            bindings = <
                &trans          &bootloader     &to BASE        &none           &none           &none           &kp LC(Y)       &kp LC(V)       &kp LC(C)       &kp LC(X)       &td_ctrlz       &trans
                &trans          &kp LCTRL       &kp LALT        &kp LGUI        &kp LSHFT       &none           &none           &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP    &mmv MOVE_RIGHT &none
                &trans          &sys_reset      &kp RALT        &to SYM         &to MOUSE       &none           &none           &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP    &msc SCRL_RIGHT &trans
                                                &none           &none           &none           &mkp RCLK       &mkp LCLK       &mkp MCLK
            >;
        };

        fun_layer {
            bindings = <
                &trans          &kp F12         &kp F7          &kp F8          &kp F9          &kp PSCRN       &none           &to BASE        &none           &none           &bootloader     &trans
                &trans          &kp F11         &kp F4          &kp F5          &kp F6          &kp SLCK        &none           &kp LSHFT       &kp LGUI        &kp LALT        &kp LCTRL       &none
                &trans          &kp F10         &kp F1          &kp F2          &kp F3          &kp PAUSE_BREAK &none           &to FUN         &to MEDIA       &kp RALT        &sys_reset      &trans
                                                &kp K_APP       &kp SPACE       &kp TAB         &none           &none           &none
            >;
        };

    };
};